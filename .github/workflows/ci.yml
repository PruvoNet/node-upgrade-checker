name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'

env:
  PRIMARY_NODE_VERSION: 10

jobs:
  test:
    name: Code validation and tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    steps:
      - uses: actions/checkout@v2

      - name: echo github.ref
        run: echo ${{ github.ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies and build
        run: |
          yarn --ignore-engines --frozen-lockfile
          yarn check-clean-workspace-after-install

      - name: Check code formatting
        run: yarn format:check

      - name: Run linting
        run: yarn lint

      - name: Validate spelling
        run: yarn check:spelling

      - name: Run unit tests
        run: yarn cover

      - name: Publish code coverage report
        uses: codecov/codecov-action@v1
        with:
          yml: ./codecov.yml
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittest
          name: codecov
          fail_ci_if_error: true

  publish_version:
    name: Publish new version to npm
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow

      - name: Use Node.js ${{ env.PRIMARY_NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
          registry-url: https://registry.npmjs.org/

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies and build
        run: |
          yarn --ignore-engines --frozen-lockfile
          yarn check-clean-workspace-after-install
          yarn run build

      - name: Publish if version has been updated
        uses: pascalgn/npm-publish-action@1.1.0
        with:
          tag_name: "v%s"
          tag_message: "v%s"
          commit_pattern: "^Release (\\S+)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
