name: CI

on:
  push:
    branches:
      - master
  release:
    types: [published]
  pull_request:
    branches:
      - '**'

env:
  PRIMARY_NODE_VERSION: 10.x
  FORCE_COLOR: true
  JEST_CI: true
  REGISTRY: https://registry.npmjs.org/

jobs:
  test:
    name: CI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [10.x, 12.x]
        exclude:
          - os: windows-latest
            node-version: 10.x
          - os: macos-latest
            node-version: 10.x
    steps:
      - uses: actions/checkout@v2

      - name: echo github.ref
        run: echo ${{ github.ref }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies and build
        run: |
          yarn --ignore-engines --frozen-lockfile
          yarn check-clean-workspace-after-install

      - name: Check code formatting
        run: yarn format:check

      - name: Run linting
        run: yarn lint

      - name: Validate spelling
        run: yarn check:spelling

      - name: Run unit tests
        run: yarn cover:unit

      - name: Publish code coverage report
        if: matrix.node-version == env.PRIMARY_NODE_VERSION
        uses: codecov/codecov-action@v1
        with:
          yml: ./codecov.yml
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittest
          name: codecov
          fail_ci_if_error: true

      - name: Run integration tests
        run: yarn run test:integ

      - name: Run e2e tests
        run: yarn run test:e2e

  publish_version:
    name: Publish
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow

      - name: Use Node.js ${{ env.PRIMARY_NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.PRIMARY_NODE_VERSION }}
          registry-url: ${{ env.REGISTRY }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies and build
        run: |
          yarn --ignore-engines --frozen-lockfile
          yarn check-clean-workspace-after-install
          yarn run build

      - name: Publish
        run: |
          yarn config set registry $REGISTRY
          yarn config set username $NPM_AUTH_USER
          yarn config set email $NPM_AUTH_EMAIL
          npm config set //registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN
          yarn publish --non-interactive --no-git-tag-version
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
